name: lint

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main
      
jobs:
  docker_lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for changes in Dockerfile
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            changed:
              - "context/Dockerfile"

      - name: Lint Dockerfile
        if: steps.filter.outputs.changed == 'true'
        uses: hadolint/hadolint-action@master
        with:
          dockerfile: "context/Dockerfile"
          ignore: 'DL3006,DL3008,DL3013'

  lint_python_scripts:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Installing poetry
        uses: snok/install-poetry@v1
        with:
          version: 2.1.2

      - name: Installing dependencies
        run: |
          poetry config virtualenvs.create false && poetry config virtualenvs.in-project false
          poetry install --with dev

      - name: Finding changed packages
        id: changed_packages
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_EVENT_PULL_REQUEST_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_EVENT_PULL_REQUEST_HEAD_SHA: ${{ github.event.pull_request.head.sha }}
          GITHUB_SHA: ${{ github.sha }}
        run: |
          if [ "${GITHUB_EVENT_NAME}" = "pull_request" ]; then
            BASE_SHA="${GITHUB_EVENT_PULL_REQUEST_BASE_SHA}"
            HEAD_SHA="${GITHUB_EVENT_PULL_REQUEST_HEAD_SHA}"
          else
            git fetch origin --depth=2
            BASE_SHA=$(git rev-parse "${GITHUB_SHA}^")
            HEAD_SHA="${GITHUB_SHA}"
          fi

          echo "Comparing $BASE_SHA...$HEAD_SHA"
          DIFF_FILES=$(git diff --name-only "$BASE_SHA" "$HEAD_SHA" -- '*.py')
          echo "Modified Python files:"
          echo "$DIFF_FILES"

          PACKAGES=""
          for file in $DIFF_FILES; do
            dir=$(dirname "$file")
            package_dir=""
            while [ "$dir" != "." ] && [ "$dir" != "/" ]; do
              if [ -f "$dir/pyproject.toml" ]; then
                package_dir="$dir"
                break
              fi
              dir=$(dirname "$dir")
            done
            if [ -n "$package_dir" ]; then
              PACKAGES="$PACKAGES '$package_dir'"
            fi
          done

          PACKAGES=$(echo "$PACKAGES" | tr ' ' '\n' | sort -u | tr '\n' ' ')

          echo "Changed packages:"
          echo "$PACKAGES"
          echo "packages=$PACKAGES" >> $GITHUB_OUTPUT
      - name: Installing dependencies in changed packages
        if: steps.changed_packages.outputs.packages != ''
        run: |
          for dir in ${{ steps.changed_packages.outputs.packages }}; do
            if [ -f "$dir/pyproject.toml" ]; then
              echo "Installing dependencies in $dir"
              cd "$dir"
              poetry install --no-root
              cd - > /dev/null
            fi
          done

      - name: Running ruff and mypy
        if: steps.changed_packages.outputs.packages != ''
        run: |
          failures=0
          for dir in ${{ steps.changed_packages.outputs.packages }}; do
            echo "Running Ruff in $dir"
            poetry run ruff check --config ./ruff.toml "$dir" || failures=1
            echo "Running mypy in $dir"
            poetry run mypy --config-file ./mypy.ini "$dir" || failures=1
          done
          exit $failures
